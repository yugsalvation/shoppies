{"version":3,"sources":["logo.svg","serviceWorker.js","components/nominations.jsx","components/search.jsx","components/searchbar.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Nominations","state","nominees","deleteNomination","nomination","console","log","props","k3","Id","x","filter","item","setState","this","map","tag","key","Year","Title","type","className","onClick","Component","Search","items","isLoaded","statekeyword","inputRef","React","createRef","addNomination","e","length","alert","target","setAttribute","k2","keyword","fetch","then","res","json","JSON","stringify","k4","document","getElementById","removeAttribute","itemss","undefined","imdbID","id","SearchBar","keywor","removed","setKeywor","current","value","align","placeholder","ref","onKeyUp","href","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcffc3b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nclass Nominations extends Component {\n  state = {\n    nominees: [],\n  };\n  componentDidUpdate() {\n    if (this.state.nominees == this.props.nominees) {\n    } else {\n      this.setState({ nominees: this.props.nominees });\n      //console.log(this.state.nominees);\n    }\n  }\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.state.nominees.map((tag) => (\n            <li key={tag.Year}>\n              {tag.Title}({tag.Year})\n              <button\n                type=\"button\"\n                className=\"btn btn-dark btn-sm\"\n                onClick={() =>\n                  this.deleteNomination({\n                    Title: tag.Title,\n                    Year: tag.Year,\n                    Id: tag.Id,\n                  })\n                }\n              >\n                Delete\n              </button>\n              <br />\n              <br />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  deleteNomination = (nomination) => {\n    console.log(nomination);\n    this.props.k3(nomination.Id);\n    let x = this.state.nominees.filter((item) => item.Id !== nomination.Id);\n    this.setState(\n      {\n        nominees: x,\n      },\n      console.log(this.state.nominees)\n    );\n  };\n}\n\nexport default Nominations;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Nominations from \"./nominations\";\nclass Search extends Component {\n  state = {\n    items: [],\n    isLoaded: false,\n    statekeyword: \"\",\n    nominees: [],\n  };\n  inputRef = React.createRef();\n  componentDidUpdate() {\n    if (this.state.statekeyword == this.props.keyword) {\n    } else {\n      fetch(\n        \"https://www.omdbapi.com/?s=\" +\n          this.props.keyword +\n          \"&type=movie&apikey=ec3ae572\"\n      )\n        .then((res) => res.json())\n        .then((json) =>\n          this.setState({\n            isLoaded: true,\n            items: json,\n            statekeyword: this.props.keyword,\n          })\n        );\n      console.log(this.props.keyword);\n    }\n\n    if (\n      JSON.stringify(this.state.nominees) ===\n        JSON.stringify(\n          this.state.nominees.filter((item) => item.Id !== this.props.k4)\n        ) ||\n      this.state.nominees.length == 0\n    ) {\n    } else {\n      let x = this.state.nominees.filter((item) => item.Id !== this.props.k4);\n\n      this.setState(\n        {\n          nominees: x,\n        },\n        console.log(this.state.nominees)\n      );\n      let xs = document.getElementById(this.props.k4);\n      xs.removeAttribute(\"disabled\");\n      console.log(this.props.k4);\n    }\n  }\n  addNomination = (nomination, e) => {\n    if (this.state.nominees.length > 4) {\n      alert(\n        \"5 nominations done, remove any movie if you want to nominate an other one \"\n      );\n      // this.props.k2(\"undefined\");\n    } else {\n      this.setState({ nominees: [...this.state.nominees, nomination] }, () =>\n        console.log(\"in search\" + this.state.nominees)\n      );\n\n      let title = nomination.Title;\n\n      console.log(this.state.nominees);\n      e.target.setAttribute(\"disabled\", \"disabled\");\n\n      this.props.k2(nomination);\n    }\n  };\n  render() {\n    var isLoaded = this.state.isLoaded;\n    var itemss = this.state.items.Search;\n    if (!isLoaded) {\n      return <div>not loaded</div>;\n    } else if (itemss == undefined) {\n      return <div>No results found or too many results</div>;\n    } else {\n      //console.log(this.props.keyword);\n      return (\n        <div>\n          <div className=\"row\">\n            <h3>Results for {this.props.keyword}</h3>\n            <ul>\n              {itemss.map((tag) => (\n                <li key={tag.imdbID + \"He\"}>\n                  <span>\n                    {\" \"}\n                    {tag.Title} ({tag.Year}){\" \"}\n                    <button\n                      type=\"button\"\n                      id={tag.imdbID}\n                      className=\"btn btn-dark btn-sm\"\n                      onClick={(e) =>\n                        this.addNomination(\n                          {\n                            Title: tag.Title,\n                            Year: tag.Year,\n                            Id: tag.imdbID,\n                          },\n                          e\n                        )\n                      }\n                    >\n                      Nominate\n                    </button>\n                  </span>\n                  <br /> <br />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Search from \"./search\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./search.css\";\nimport Nominations from \"./nominations\";\nimport \"./search.css\";\nclass SearchBar extends Component {\n  state = {\n    keywor: \"\",\n    nominees: [],\n    removed: -1,\n  };\n  //   constructor(props) {\n  //     super(props);\n  //     this.setKeyword = this.setKeyword.bind(this);\n  //   }\n  inputRef = React.createRef();\n  render() {\n    //console.log(this.state.keywor);\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-2\"></div>\n            <div className=\"col-sm-8\">\n              <h1 align=\"center\">Welcome to Shoppies</h1>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"search any movie\"\n                ref={this.inputRef}\n                onKeyUp={this.setKeywor}\n              />\n            </div>\n            <div className=\"col-sm-2\"></div>\n          </div>\n          <br />\n          <div className=\"row\">\n            <div className=\"col-sm-2\"></div>\n            <div className=\"col-sm-4 searchresults\">\n              <Search\n                keyword={this.state.keywor}\n                k2={this.addNomination}\n                k4={this.state.removed}\n              />\n            </div>\n\n            <div className=\"col-sm-4 nominations\">\n              {\" \"}\n              <Nominations\n                nominees={this.state.nominees}\n                k3={this.deleteNomination}\n              />\n            </div>\n            <div className=\"col-sm-2\"></div>\n          </div>\n          <div className=\"footer\">\n            <a href=\"https://www.linkedin.com/in/yug-rawal/\" target=\"_blank\">\n              Linked In:Yug Rawal\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  setKeywor = () => {\n    this.setState({ keywor: this.inputRef.current.value });\n    let k = this.state.keywor;\n  };\n  deleteNomination = (nomination) => {\n    this.setState({\n      nominees: this.state.nominees.filter((item) => item.Id !== nomination),\n      removed: nomination,\n    });\n  };\n  addNomination = (nomination) => {\n    if (this.state.nominees.length > 4) {\n    } else {\n      this.setState(\n        { nominees: [...this.state.nominees, nomination] },\n        console.log(\"in bar\" + this.state.nominees)\n      );\n    }\n  };\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Search from \"./components/search\";\nimport SearchBar from \"./components/searchbar\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SearchBar />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}